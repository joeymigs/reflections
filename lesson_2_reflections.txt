What happens when you initialize a repository? Why do you need to do it?
 - Git creates a new hidden directory called '.git' populated with the necessary files/sub-directories necessary for Git to track the main directory's contents (i.e. initializing Git for the directory/repo).



How is the staging area different from the working directory and the repository?
What value do you think it offers?
 - Working directory = The dir on your local machine that contains the current state of your local copy of the repo
 - Repository 		 = The entire project, including all commit versions
 - Staging area		 = A "temporary" "directory" that contains files/directories(?) that have either just been added or updated, allowing you to organize them (include/exclude files) before committing them to the repo



How can you use the staging area to make sure you have one commit per logical
change?




What are some situations when branches would be helpful in keeping your history
organized? How would branches help?




How do the diagrams help you visualize the branch structure?




What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?




What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
